#!/usr/bin/env -S java --source 21

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;

class CheckIfRelease {
	private static List<String> getChangedFilesSinceRef(String ref) throws IOException, InterruptedException {

		List<String> changedFiles = new ArrayList<>();
		ProcessBuilder pb = new ProcessBuilder("git", "diff", "--name-only", ref, ".changeset/VERSION");
		Process process = pb.start();
		process.waitFor(10L, TimeUnit.SECONDS);

		try (BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()))) {
			String line;
			while ((line = reader.readLine()) != null && !line.isBlank()) {
				changedFiles.add(line);
			}
		}
		return changedFiles;
	}

	public static void main(String... args) throws IOException, InterruptedException {
		var beforeRef = System.getenv("COMMIT_SHA_BEFORE");
		List<String> changedFiles = getChangedFilesSinceRef(beforeRef);

		System.exit(changedFiles.size() == 1 ? 0 : 1);
	}
}

